name: Genres
description: 'APIs for managing genres'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/genres
    metadata:
      groupName: Genres
      groupDescription: 'APIs for managing genres'
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the genres'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 81
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 9999.'
        required: false
        example: 13
        type: integer
        custom: []
    cleanBodyParameters:
      page: 81
      per_page: 13
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Action",
                "created_at": "2023-07-10 09:00:00",
                "updated_at": "2023-07-10 09:00:00"
              },
              {
                "id": 2,
                "name": "Comedy",
                "created_at": "2023-07-10 09:00:00",
                "updated_at": "2023-07-10 09:00:00"
              }
            ],
            "links": {
              "first": "http://localhost/api/genres?page=1",
              "last": "http://localhost/api/genres?page=2",
              "prev": null,
              "next": "http://localhost/api/genres?page=2"
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 2,
              "path": "http://localhost/api/genres",
              "per_page": 15,
              "to": 15,
              "total": 25
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/genres
    metadata:
      groupName: Genres
      groupDescription: 'APIs for managing genres'
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new genre'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
        required: true
        example: knchdbtgxihbiboerulvey
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
      uuid:
        name: uuid
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      name: knchdbtgxihbiboerulvey
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 3,
            "name": "Drama",
            "created_at": "2023-07-10 09:00:00",
            "updated_at": "2023-07-10 09:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/genres/{id}'
    metadata:
      groupName: Genres
      groupDescription: 'APIs for managing genres'
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a genre'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the genre.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Action",
            "created_at": "2023-07-10 09:00:00",
            "updated_at": "2023-07-10 09:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/genres/{id}'
    metadata:
      groupName: Genres
      groupDescription: 'APIs for managing genres'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a genre'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the genre.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
        required: false
        example: vgjznd
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      name: vgjznd
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Thriller",
            "created_at": "2023-07-10 09:00:00",
            "updated_at": "2023-07-10 09:15:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/genres/{id}'
    metadata:
      groupName: Genres
      groupDescription: 'APIs for managing genres'
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a genre'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the genre.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '"Deleted genre successfully."'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

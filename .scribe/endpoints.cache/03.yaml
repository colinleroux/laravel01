## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: "API's for user management."
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: "API's for user management."
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of users.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 77
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 9999.'
        required: false
        example: 8
        type: integer
        custom: []
    cleanBodyParameters:
      page: 77
      per_page: 8
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "current_page": 1,
            "data": [
              {
                "id": 1,
                "name": "Colin Ford",
                "email": "colin@example.com",
                "created_at": "2023-07-10 09:00:00",
                "updated_at": "2023-07-10 09:00:00"
              },
              {
                "id": 2,
                "name": "Jane Peters",
                "email": "janep@example.com",
                "created_at": "2023-07-10 09:00:00",
                "updated_at": "2023-07-10 09:00:00"
              }
            ],
            "first_page_url": "http://localhost/api/users?page=1",
            "from": 1,
            "last_page": 5,
            "last_page_url": "http://localhost/api/users?page=5",
            "next_page_url": "http://localhost/api/users?page=2",
            "path": "http://localhost/api/users",
            "per_page": 3,
            "prev_page_url": null,
            "to": 3,
            "total": 15
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: "API's for user management."
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": "Method Not Found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: "API's for user management."
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "John Doe",
            "email": "johndoe@example.com",
            "created_at": "2023-07-10 09:00:00",
            "updated_at": "2023-07-10 09:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: "API's for user management."
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": "Method Not Found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: "API's for user management."
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": "Method Not Found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

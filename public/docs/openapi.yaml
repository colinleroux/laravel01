openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://laravel01'
paths:
  /api/authors:
    get:
      summary: 'Display a listing of the authors.'
      operationId: displayAListingOfTheAuthors
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Retrieved successfully'
                  data:
                    -
                      id: 1
                      name: 'John Doe'
                      email: johndoe@example.com
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                    -
                      id: 2
                      name: 'Jane Smith'
                      email: janesmith@example.com
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Retrieved successfully'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'John Doe'
                        email: johndoe@example.com
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                      -
                        id: 2
                        name: 'Jane Smith'
                        email: janesmith@example.com
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'John Doe'
                        email:
                          type: string
                          example: johndoe@example.com
                        created_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                        updated_at:
                          type: string
                          example: '2023-07-10 09:00:00'
      tags:
        - Authors
      security: []
    post:
      summary: 'Store a newly created author.'
      operationId: storeANewlyCreatedAuthor
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authors
      security: []
  '/api/authors/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authors
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authors
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authors
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  /api/books:
    get:
      summary: 'Display a listing of books.'
      operationId: displayAListingOfBooks
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      title: 'Book 1'
                      author: 'John Doe'
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                    -
                      id: 2
                      title: 'Book 2'
                      author: 'Jane Smith'
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Book 1'
                        author: 'John Doe'
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                      -
                        id: 2
                        title: 'Book 2'
                        author: 'Jane Smith'
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Book 1'
                        author:
                          type: string
                          example: 'John Doe'
                        created_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                        updated_at:
                          type: string
                          example: '2023-07-10 09:00:00'
      tags:
        - Books
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Books
      security: []
  '/api/books/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Books
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Books
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Books
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the book.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: cmarvin@example.net
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'F*eOP~\@'
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/genres:
    get:
      summary: 'Display a listing of the genres'
      operationId: displayAListingOfTheGenres
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Action
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                    -
                      id: 2
                      name: Comedy
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                  links:
                    first: 'http://localhost/api/genres?page=1'
                    last: 'http://localhost/api/genres?page=2'
                    prev: null
                    next: 'http://localhost/api/genres?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 2
                    path: 'http://localhost/api/genres'
                    per_page: 15
                    to: 15
                    total: 25
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Action
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                      -
                        id: 2
                        name: Comedy
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Action
                        created_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                        updated_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/genres?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/genres?page=2'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/genres?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 2
                      path:
                        type: string
                        example: 'http://localhost/api/genres'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 25
      tags:
        - Genres
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 81
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 9999.'
                  example: 13
      security: []
    post:
      summary: 'Store a new genre'
      operationId: storeANewGenre
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  name: Drama
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:00:00'
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: Drama
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:00:00'
      tags:
        - Genres
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: knchdbtgxihbiboerulvey
                description:
                  type: string
                  description: ''
                  example: null
                uuid:
                  type: string
                  description: ''
                  example: null
              required:
                - name
      security: []
  '/api/genres/{id}':
    get:
      summary: 'Display a genre'
      operationId: displayAGenre
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: Action
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:00:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Action
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:00:00'
      tags:
        - Genres
      security: []
    put:
      summary: 'Update a genre'
      operationId: updateAGenre
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: Thriller
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:15:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Thriller
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:15:00'
      tags:
        - Genres
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 32 characters.'
                  example: vgjznd
                description:
                  type: string
                  description: ''
                  example: null
      security: []
    delete:
      summary: 'Remove a genre'
      operationId: removeAGenre
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Deleted genre successfully.'
      tags:
        - Genres
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the genre.'
        example: 1
        required: true
        schema:
          type: integer
  /api/languages:
    get:
      summary: 'Display a listing of languages.'
      operationId: displayAListingOfLanguages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: English
                      code: en
                      description: 'English language'
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                    -
                      id: 2
                      name: Spanish
                      code: es
                      description: 'Spanish language'
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: English
                        code: en
                        description: 'English language'
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                      -
                        id: 2
                        name: Spanish
                        code: es
                        description: 'Spanish language'
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: English
                        code:
                          type: string
                          example: en
                        description:
                          type: string
                          example: 'English language'
                        created_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                        updated_at:
                          type: string
                          example: '2023-07-10 09:00:00'
      tags:
        - Languages
      security: []
    post:
      summary: 'Store a newly created language in storage.'
      operationId: storeANewlyCreatedLanguageInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  name: French
                  code: fr
                  description: 'French language'
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:00:00'
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: French
                  code:
                    type: string
                    example: fr
                  description:
                    type: string
                    example: 'French language'
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:00:00'
      tags:
        - Languages
      security: []
  '/api/languages/{id}':
    get:
      summary: 'Display the specified language.'
      operationId: displayTheSpecifiedLanguage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: English
                  code: en
                  description: 'English language'
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:00:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: English
                  code:
                    type: string
                    example: en
                  description:
                    type: string
                    example: 'English language'
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:00:00'
      tags:
        - Languages
      security: []
    put:
      summary: 'Update the specified language in storage.'
      operationId: updateTheSpecifiedLanguageInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: English
                  code: en
                  description: 'Updated description'
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 10:00:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: English
                  code:
                    type: string
                    example: en
                  description:
                    type: string
                    example: 'Updated description'
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 10:00:00'
      tags:
        - Languages
      security: []
    delete:
      summary: 'Remove the specified language from storage.'
      operationId: removeTheSpecifiedLanguageFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Deleted successfully.'
      tags:
        - Languages
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the language.'
        example: 1
        required: true
        schema:
          type: integer
  /api/publishers:
    get:
      summary: 'Display a listing of publishers.'
      operationId: displayAListingOfPublishers
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      name: 'Publisher 1'
                      city: 'City 1'
                      country_code: US
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                    -
                      id: 2
                      name: 'Publisher 2'
                      city: 'City 2'
                      country_code: UK
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                  first_page_url: 'http://localhost/api/publishers?page=1'
                  from: 1
                  last_page: 5
                  last_page_url: 'http://localhost/api/publishers?page=5'
                  next_page_url: 'http://localhost/api/publishers?page=2'
                  path: 'http://localhost/api/publishers'
                  per_page: 10
                  prev_page_url: null
                  to: 10
                  total: 50
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Publisher 1'
                        city: 'City 1'
                        country_code: US
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                      -
                        id: 2
                        name: 'Publisher 2'
                        city: 'City 2'
                        country_code: UK
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Publisher 1'
                        city:
                          type: string
                          example: 'City 1'
                        country_code:
                          type: string
                          example: US
                        created_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                        updated_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                  first_page_url:
                    type: string
                    example: 'http://localhost/api/publishers?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 5
                  last_page_url:
                    type: string
                    example: 'http://localhost/api/publishers?page=5'
                  next_page_url:
                    type: string
                    example: 'http://localhost/api/publishers?page=2'
                  path:
                    type: string
                    example: 'http://localhost/api/publishers'
                  per_page:
                    type: integer
                    example: 10
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 10
                  total:
                    type: integer
                    example: 50
      tags:
        - Publishers
      security: []
    post:
      summary: 'Store a newly created publisher in storage.'
      operationId: storeANewlyCreatedPublisherInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  name: 'Publisher 3'
                  city: 'City 3'
                  country_code: DE
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:00:00'
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: 'Publisher 3'
                  city:
                    type: string
                    example: 'City 3'
                  country_code:
                    type: string
                    example: DE
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:00:00'
      tags:
        - Publishers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: velit
                city:
                  type: string
                  description: ''
                  example: voluptatem
                country_code:
                  type: string
                  description: ''
                  example: beatae
              required:
                - name
                - city
                - country_code
      security: []
  '/api/publishers/{id}':
    get:
      summary: 'Display the specified publisher.'
      operationId: displayTheSpecifiedPublisher
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'Publisher 1'
                  city: 'City 1'
                  country_code: US
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:00:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'Publisher 1'
                  city:
                    type: string
                    example: 'City 1'
                  country_code:
                    type: string
                    example: US
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:00:00'
      tags:
        - Publishers
      security: []
    put:
      summary: 'Update the specified publisher in storage.'
      operationId: updateTheSpecifiedPublisherInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'Publisher 1'
                  city: 'Updated City'
                  country_code: US
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 10:00:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'Publisher 1'
                  city:
                    type: string
                    example: 'Updated City'
                  country_code:
                    type: string
                    example: US
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 10:00:00'
      tags:
        - Publishers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: rerum
                city:
                  type: string
                  description: ''
                  example: vel
                country_code:
                  type: string
                  description: ''
                  example: vitae
              required:
                - name
                - city
                - country_code
      security: []
    delete:
      summary: 'Remove the specified publisher from storage.'
      operationId: removeTheSpecifiedPublisherFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Publisher deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Publisher deleted successfully'
      tags:
        - Publishers
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the publisher.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: 'Display a listing of users.'
      operationId: displayAListingOfUsers
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      name: 'Colin Ford'
                      email: colin@example.com
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                    -
                      id: 2
                      name: 'Jane Peters'
                      email: janep@example.com
                      created_at: '2023-07-10 09:00:00'
                      updated_at: '2023-07-10 09:00:00'
                  first_page_url: 'http://localhost/api/users?page=1'
                  from: 1
                  last_page: 5
                  last_page_url: 'http://localhost/api/users?page=5'
                  next_page_url: 'http://localhost/api/users?page=2'
                  path: 'http://localhost/api/users'
                  per_page: 3
                  prev_page_url: null
                  to: 3
                  total: 15
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Colin Ford'
                        email: colin@example.com
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                      -
                        id: 2
                        name: 'Jane Peters'
                        email: janep@example.com
                        created_at: '2023-07-10 09:00:00'
                        updated_at: '2023-07-10 09:00:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Colin Ford'
                        email:
                          type: string
                          example: colin@example.com
                        created_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                        updated_at:
                          type: string
                          example: '2023-07-10 09:00:00'
                  first_page_url:
                    type: string
                    example: 'http://localhost/api/users?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 5
                  last_page_url:
                    type: string
                    example: 'http://localhost/api/users?page=5'
                  next_page_url:
                    type: string
                    example: 'http://localhost/api/users?page=2'
                  path:
                    type: string
                    example: 'http://localhost/api/users'
                  per_page:
                    type: integer
                    example: 3
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 3
                  total:
                    type: integer
                    example: 15
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 77
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 9999.'
                  example: 8
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Method Not Found'
                properties:
                  error:
                    type: string
                    example: 'Method Not Found'
      tags:
        - Users
      security: []
  '/api/users/{id}':
    get:
      summary: 'Display the specified user.'
      operationId: displayTheSpecifiedUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'John Doe'
                  email: johndoe@example.com
                  created_at: '2023-07-10 09:00:00'
                  updated_at: '2023-07-10 09:00:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: johndoe@example.com
                  created_at:
                    type: string
                    example: '2023-07-10 09:00:00'
                  updated_at:
                    type: string
                    example: '2023-07-10 09:00:00'
      tags:
        - Users
      security: []
    put:
      summary: 'Update the specified user'
      operationId: updateTheSpecifiedUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Method Not Found'
                properties:
                  error:
                    type: string
                    example: 'Method Not Found'
      tags:
        - Users
      security: []
    delete:
      summary: 'Remove the specified user.'
      operationId: removeTheSpecifiedUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Method Not Found'
                properties:
                  error:
                    type: string
                    example: 'Method Not Found'
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authors
    description: 'APIs for managing the Authors.'
  -
    name: Books
    description: 'APIs for books.'
  -
    name: Endpoints
    description: ''
  -
    name: Genres
    description: 'APIs for managing genres'
  -
    name: Languages
    description: "API's for languages."
  -
    name: Publishers
    description: "API's for the publishers."
  -
    name: Users
    description: "API's for user management."
